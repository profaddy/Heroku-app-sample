{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createNotification } from \"../../utils/notificationHelper\";\nimport EntriesManager from \"./entries-manager\";\nimport Actions from \"./entries-manager-actions\";\nimport userActions from \"../UserManager/user-actions\";\nimport inventoryActions from \"../InventoryManager/inventory-manager-actions\";\n\nconst mapStateToProps = state => {\n  return {\n    entries: state.EntriesManager.entries,\n    compactEntries: state.EntriesManager.filteredEntries,\n    addEntryModalShowing: state.EntriesManager.addEntryModalShowing,\n    addUserModalShowing: state.UserManager.addUserModalShowing,\n    addInventoryModalShowing: state.InventoryManager.addInventoryModalShowing,\n    users: state.UserManager.users,\n    inventories: state.InventoryManager.inventories,\n    selectedEntry: state.EntriesManager.selectedEntry,\n    adminPassword: state.EntriesManager.adminPassword,\n    authenticated: state.EntriesManager.authenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    _fetchEntries: bindActionCreators(Actions._fetchEntries, dispatch),\n    _fetchEntryInfo: bindActionCreators(Actions._fetchEntryInfo, dispatch),\n    _fetchInventories: bindActionCreators(inventoryActions._fetchInventories, dispatch),\n    _fetchUsers: bindActionCreators(userActions._fetchUsers, dispatch),\n    _addUser: bindActionCreators(userActions._addUser, dispatch),\n    _addInventory: bindActionCreators(inventoryActions._addInventory, dispatch),\n    _addEntry: bindActionCreators(Actions._addEntry, dispatch),\n    _filterEntry: bindActionCreators(Actions._filterEntry, dispatch),\n    _updateEntry: bindActionCreators(Actions._updateEntry, dispatch),\n    _deleteEntry: bindActionCreators(Actions._deleteEntry, dispatch),\n    _openAddEntryModal: bindActionCreators(Actions._openAddEntryModal, dispatch),\n    _closeAddEntryModal: bindActionCreators(Actions._closeAddEntryModal, dispatch),\n    _openAddUserModal: bindActionCreators(userActions._openAddUserModal, dispatch),\n    _closeAddUserModal: bindActionCreators(userActions._closeAddUserModal, dispatch),\n    _openAddInventoryModal: bindActionCreators(inventoryActions._openAddInventoryModal, dispatch),\n    _closeAddInventoryModal: bindActionCreators(inventoryActions._closeAddInventoryModal, dispatch),\n    createNotification: bindActionCreators(createNotification, dispatch),\n    _doAuthenticateEdit: bindActionCreators(Actions._doAuthenticateEdit, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntriesManager);","map":{"version":3,"sources":["/home/adnan/Desktop/Projects/pocs/credit-debit-software/client/src/containers/EntriesManager/index.js"],"names":["connect","bindActionCreators","createNotification","EntriesManager","Actions","userActions","inventoryActions","mapStateToProps","state","entries","compactEntries","filteredEntries","addEntryModalShowing","addUserModalShowing","UserManager","addInventoryModalShowing","InventoryManager","users","inventories","selectedEntry","adminPassword","authenticated","mapDispatchToProps","dispatch","_fetchEntries","_fetchEntryInfo","_fetchInventories","_fetchUsers","_addUser","_addInventory","_addEntry","_filterEntry","_updateEntry","_deleteEntry","_openAddEntryModal","_closeAddEntryModal","_openAddUserModal","_closeAddUserModal","_openAddInventoryModal","_closeAddInventoryModal","_doAuthenticateEdit"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createNotification } from \"../../utils/notificationHelper\";\nimport EntriesManager from \"./entries-manager\";\nimport Actions from \"./entries-manager-actions\";\nimport userActions from \"../UserManager/user-actions\";\nimport inventoryActions from \"../InventoryManager/inventory-manager-actions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        entries: state.EntriesManager.entries,\n        compactEntries: state.EntriesManager.filteredEntries,\n        addEntryModalShowing: state.EntriesManager.addEntryModalShowing,\n        addUserModalShowing: state.UserManager.addUserModalShowing,\n        addInventoryModalShowing:state.InventoryManager.addInventoryModalShowing,\n        users: state.UserManager.users,\n        inventories: state.InventoryManager.inventories,\n        selectedEntry: state.EntriesManager.selectedEntry,\n        adminPassword: state.EntriesManager.adminPassword,\n        authenticated: state.EntriesManager.authenticated\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        _fetchEntries: bindActionCreators(Actions._fetchEntries, dispatch),\n        _fetchEntryInfo: bindActionCreators(Actions._fetchEntryInfo, dispatch),\n        _fetchInventories: bindActionCreators(inventoryActions._fetchInventories, dispatch),\n        _fetchUsers: bindActionCreators(userActions._fetchUsers, dispatch),\n        _addUser: bindActionCreators(userActions._addUser, dispatch),\n        _addInventory: bindActionCreators(inventoryActions._addInventory, dispatch),\n        _addEntry: bindActionCreators(Actions._addEntry, dispatch),\n        _filterEntry: bindActionCreators(Actions._filterEntry, dispatch),\n        _updateEntry: bindActionCreators(Actions._updateEntry, dispatch),\n        _deleteEntry: bindActionCreators(Actions._deleteEntry,dispatch),\n        _openAddEntryModal: bindActionCreators(Actions._openAddEntryModal, dispatch),\n        _closeAddEntryModal: bindActionCreators(Actions._closeAddEntryModal, dispatch),\n        _openAddUserModal: bindActionCreators(userActions._openAddUserModal, dispatch),\n        _closeAddUserModal: bindActionCreators(userActions._closeAddUserModal, dispatch),\n        _openAddInventoryModal: bindActionCreators(inventoryActions._openAddInventoryModal, dispatch),\n        _closeAddInventoryModal: bindActionCreators(inventoryActions._closeAddInventoryModal, dispatch),\n        createNotification:bindActionCreators(createNotification, dispatch),\n        _doAuthenticateEdit:bindActionCreators(Actions._doAuthenticateEdit, dispatch)\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EntriesManager);\n"]},"metadata":{},"sourceType":"module"}