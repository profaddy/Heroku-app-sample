{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport history from \"./history\";\nimport rootReducer from \"./rootReducer\";\nimport sagaMiddleware from \"./sagamiddleware\";\nimport userManagerSagas from \"../containers/UserManager/user-manager-sagas\";\nimport entriesManagerSagas from \"../containers/EntriesManager/entries-manager-sagas\";\nimport inventoryrManagerSagas from \"../containers/InventoryManager/inventory-manager-sagas\";\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [routerMiddleware(history), sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\nconst store = createStore(connectRouter(history)(rootReducer), initialState, composedEnhancers); // export const  persistor = persistStore(store)\n// sagaMiddleware.run(inventoryManagerSagas);\n\nsagaMiddleware.run(userManagerSagas);\nsagaMiddleware.run(entriesManagerSagas);\nsagaMiddleware.run(inventoryrManagerSagas);\nexport default store;","map":{"version":3,"sources":["/home/adnan/Desktop/Projects/pocs/credit-debit-software/client/src/mystore/store.js"],"names":["createStore","applyMiddleware","compose","connectRouter","routerMiddleware","history","rootReducer","sagaMiddleware","userManagerSagas","entriesManagerSagas","inventoryrManagerSagas","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,mBAAP,MAAgC,oDAAhC;AACA,OAAOC,sBAAP,MAAmC,wDAAnC;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAG,CACfT,gBAAgB,CAACC,OAAD,CADD,EAEfE,cAFe,CAAnB;;AAKA,IAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AACzCL,IAAAA,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AACH;AACJ;;AAED,MAAMI,iBAAiB,GAAGnB,OAAO,CAC7BD,eAAe,CAAC,GAAGY,UAAJ,CADc,EAE7B,GAAGD,SAF0B,CAAjC;AAKA,MAAMU,KAAK,GAAGtB,WAAW,CACrBG,aAAa,CAACE,OAAD,CAAb,CAAuBC,WAAvB,CADqB,EAErBK,YAFqB,EAGrBU,iBAHqB,CAAzB,C,CAKA;AACA;;AACAd,cAAc,CAACgB,GAAf,CAAmBf,gBAAnB;AACAD,cAAc,CAACgB,GAAf,CAAmBd,mBAAnB;AACAF,cAAc,CAACgB,GAAf,CAAmBb,sBAAnB;AAEA,eAAeY,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport history from \"./history\";\nimport rootReducer from \"./rootReducer\";\nimport sagaMiddleware from \"./sagamiddleware\";\nimport userManagerSagas from \"../containers/UserManager/user-manager-sagas\";\nimport entriesManagerSagas from \"../containers/EntriesManager/entries-manager-sagas\";\nimport inventoryrManagerSagas from \"../containers/InventoryManager/inventory-manager-sagas\";\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n    routerMiddleware(history),\n    sagaMiddleware\n];\n\nif (process.env.NODE_ENV === \"development\") {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n    if (typeof devToolsExtension === \"function\") {\n        enhancers.push(devToolsExtension());\n    }\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\n\nconst store = createStore(\n    connectRouter(history)(rootReducer),\n    initialState,\n    composedEnhancers\n);\n// export const  persistor = persistStore(store)\n// sagaMiddleware.run(inventoryManagerSagas);\nsagaMiddleware.run(userManagerSagas);\nsagaMiddleware.run(entriesManagerSagas);\nsagaMiddleware.run(inventoryrManagerSagas);\n\nexport default store; \n"]},"metadata":{},"sourceType":"module"}