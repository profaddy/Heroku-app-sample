{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Desktop/Projects/pocs/credit-debit-software/client/src/components/EntryForm/EntryForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { Divider, Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { validator } from \"./validator\";\nimport DatePicker from \"react-date-picker\";\nimport moment from \"moment\";\nimport SelectComponent from \"../../components/SelectComponent/SelectComponent\";\nimport InputField from \"../../components/InputField/InputField\";\nimport ToggleComponent from \"../../components/ToggleComponent/ToggleComponent\";\n\nconst EntryForm = ({\n  classes,\n  onCancel,\n  addEntry,\n  users,\n  inventories,\n  entryMode,\n  selectedEntry,\n  updateEntry\n}) => {\n  const [initialValues, setCount] = useState({\n    entry_type: \"taken\",\n    entry_mode: entryMode\n  });\n  const [date, setDate] = useState(entryMode === \"edit\" ? selectedEntry.created_at : new Date());\n\n  const onChange = date => setDate(date);\n\n  const submitButtonText = entryMode === \"edit\" ? \"Update\" : \"Create\";\n  const CombinedInitialValues = entryMode === \"add\" ? { ...initialValues\n  } : { ...initialValues,\n    ...selectedEntry\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: values => {\n      if (entryMode === \"edit\") {\n        const created_at = moment(date).format(\"DD-MM-YYYY\");\n        updateEntry({ ...values,\n          entry_mode: \"edit\",\n          created_at\n        });\n      } else {\n        const created_at = moment(date).format(\"DD-MM-YYYY\");\n        addEntry({ ...values,\n          created_at,\n          entry_mode: \"add\"\n        });\n      }\n    },\n    initialValues: CombinedInitialValues,\n    validate: validator,\n    render: ({\n      handleSubmit,\n      pristine,\n      invalid,\n      values\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-new-entry\",\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.flex3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"user_id\",\n      options: users,\n      labelfor: \"user\",\n      labelname: \"Select User\",\n      component: SelectComponent,\n      fullWidth: true,\n      labelwidth: 120,\n      disabled: entryMode === \"edit\",\n      helperText: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"product_id\",\n      options: inventories,\n      labelfor: \"inventory\",\n      labelname: \"Select Inventory\",\n      component: SelectComponent,\n      disabled: entryMode === \"edit\",\n      fullWidth: true,\n      labelwidth: 120,\n      helperText: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }\n    })), entryMode === \"add\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      label: \"Select Quantity\",\n      name: \"entry_value\",\n      component: InputField,\n      fullWidth: false,\n      parse: value => Number(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.installTypeFieldWrap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 49\n      }\n    }, \"Entry Type\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"entry_type\",\n      options: [{\n        name: \"Taken\",\n        value: \"taken\"\n      }, {\n        name: \"Consumed\",\n        value: \"consumed\"\n      }, {\n        name: \"Returned\",\n        value: \"returned\"\n      }],\n      width: 150,\n      component: ToggleComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }))), entryMode === \"edit\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.editFieldWrap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.editFlexItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      label: \"Taken Quantity\",\n      name: \"taken\",\n      component: InputField,\n      fullWidth: false,\n      parse: value => Number(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.editFlexItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      label: \"consumed Quantity\",\n      name: \"consumed\",\n      component: InputField,\n      fullWidth: false,\n      parse: value => Number(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.editFlexItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      label: \"Returned Quantity\",\n      name: \"returned\",\n      component: InputField,\n      fullWidth: false,\n      parse: value => Number(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.flex1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onChange,\n      value: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalBodyBottomToolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: onCancel,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    form: \"add-new-entry\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, submitButtonText)))));\n};\n\nexport default withStyles(styles)(EntryForm);","map":{"version":3,"sources":["/home/adnan/Desktop/Projects/pocs/credit-debit-software/client/src/components/EntryForm/EntryForm.js"],"names":["React","useState","Form","Field","Divider","Button","withStyles","styles","validator","DatePicker","moment","SelectComponent","InputField","ToggleComponent","EntryForm","classes","onCancel","addEntry","users","inventories","entryMode","selectedEntry","updateEntry","initialValues","setCount","entry_type","entry_mode","date","setDate","created_at","Date","onChange","submitButtonText","CombinedInitialValues","container","flex1","values","format","handleSubmit","pristine","invalid","formContainer","flex3","width","paddingBottom","value","Number","installTypeFieldWrap","label","name","editFieldWrap","editFlexItem","modalBodyBottomToolbar","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { Divider, Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { validator } from \"./validator\";\nimport DatePicker from \"react-date-picker\";\nimport moment from \"moment\";\nimport SelectComponent from \"../../components/SelectComponent/SelectComponent\";\nimport InputField from \"../../components/InputField/InputField\";\nimport ToggleComponent from \"../../components/ToggleComponent/ToggleComponent\";\n\nconst EntryForm = ({ classes, onCancel, addEntry, users, inventories, entryMode, selectedEntry, updateEntry }) => {\n    const [\n        initialValues, setCount\n    ] = useState({\n        entry_type: \"taken\",\n        entry_mode:entryMode\n    });\n    const [\n        date,setDate\n    ] = useState(entryMode === \"edit\" ? selectedEntry.created_at : new Date());\n    const onChange = (date) => setDate(date);\n    const submitButtonText = entryMode === \"edit\" ? \"Update\" : \"Create\";\n    const CombinedInitialValues = entryMode === \"add\" ? { ...initialValues } : { ...initialValues, ...selectedEntry  };\n    return (\n        <>\n            <div className={classes.container}>\n                <div className={classes.flex1}>\n                    <Form\n                        onSubmit={(values) => {\n                            if (entryMode === \"edit\") {\n                                const created_at = moment(date).format(\"DD-MM-YYYY\");\n                                updateEntry({...values,entry_mode:\"edit\",created_at});\n                            } else {\n                                const created_at = moment(date).format(\"DD-MM-YYYY\");\n                                addEntry({...values,created_at,entry_mode:\"add\"});\n                            }\n                        }}\n                        initialValues={CombinedInitialValues}\n                        validate={validator}\n                        render={({ handleSubmit, pristine, invalid, values }) => (\n                            <form id=\"add-new-entry\" autoComplete=\"off\" onSubmit={handleSubmit}>\n                                {/* <FormSpy onChange={state => this.updateDetails(state.values)} /> */}\n                                <div className={classes.formContainer}>\n                                    <div className={classes.flex3}>\n                                        <div style={{ width: 200 }}>\n                                            <Field\n                                                name={\"user_id\"}\n                                                options={users}\n                                                labelfor={\"user\"}\n                                                labelname={\"Select User\"}\n                                                component={SelectComponent}\n                                                fullWidth={true}\n                                                labelwidth={120}\n                                                disabled={entryMode === \"edit\"}\n                                                helperText={(\n                                                    <span style={{ paddingBottom: 10 }}>\n\n                                                    </span>\n                                                )} />\n                                        </div>\n                                        <div style={{ width: 200 }}>\n                                            <Field\n                                                name={\"product_id\"}\n                                                options={inventories}\n                                                labelfor={\"inventory\"}\n                                                labelname={\"Select Inventory\"}\n                                                component={SelectComponent}\n                                                disabled={entryMode === \"edit\"}\n                                                fullWidth={true}\n                                                labelwidth={120}\n                                                helperText={(\n                                                    <span style={{ paddingBottom: 10 }}>\n\n                                                    </span>\n                                                )} />\n                                        </div>\n\n                                        {entryMode === \"add\" && \n                                        <>\n                                            <div style={{ width: 200 }}>\n                                                <Field\n                                                    type={\"number\"}\n                                                    label={\"Select Quantity\"}\n                                                    name={\"entry_value\"}\n                                                    component={InputField}\n                                                    fullWidth={false}\n                                                    parse={(value) => Number(value)}\n                                                />\n                                            </div>\n                                            <div className={classes.installTypeFieldWrap}>\n                                                <div className={classes.label}>\n                                                Entry Type\n                                                </div>\n                                                <Field\n                                                    name=\"entry_type\"\n                                                    options={[\n                                                        {\n                                                            name: \"Taken\",\n                                                            value: \"taken\"\n                                                        }, {\n                                                            name: \"Consumed\",\n                                                            value: \"consumed\"\n                                                        }, {\n                                                            name: \"Returned\",\n                                                            value: \"returned\"\n                                                        }\n                                                    ]}\n                                                    width={150}\n                                                    component={ToggleComponent}\n                                                />\n                                            </div>\n                                        </>}\n                                        {entryMode === \"edit\" && \n                                        <div className={classes.editFieldWrap}>\n                                            <div className={classes.editFlexItem}>\n                                                <Field\n                                                    type={\"number\"}\n                                                    label={\"Taken Quantity\"}\n                                                    name={\"taken\"}\n                                                    component={InputField}\n                                                    fullWidth={false}\n                                                    parse={(value) => Number(value)}\n                                                />\n                                            </div>\n                                            <div className={classes.editFlexItem}>\n                                                <Field\n                                                    type={\"number\"}\n                                                    label={\"consumed Quantity\"}\n                                                    name={\"consumed\"}\n                                                    component={InputField}\n                                                    fullWidth={false}\n                                                    parse={(value) => Number(value)}\n                                                />\n                                            </div>\n                                            <div className={classes.editFlexItem}>\n                                                <Field\n                                                    type={\"number\"}\n                                                    label={\"Returned Quantity\"}\n                                                    name={\"returned\"}\n                                                    component={InputField}\n                                                    fullWidth={false}\n                                                    parse={(value) => Number(value)}\n                                                />\n                                            </div>\n                                        </div>}\n                                        <div>\n                                        </div>\n                                    </div>\n                                    <div className={classes.flex1}>\n                                        <div>\n                                            {/* <Field\n                                        name={\"date\"}\n                                        value={date}\n                                        component={}\n                                        > */}\n                                            <DatePicker\n                                                onChange={onChange}\n                                                value={date}\n                                            />\n                                            {/* </Field> */}\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        )}\n                    />\n                </div>\n                <div>\n                    <Divider />\n                    <div className={classes.modalBodyBottomToolbar}>\n                        <Button variant=\"outlined\" onClick={onCancel} className={classes.button}>\n                            Cancel\n                        </Button>\n                        <Button\n                            form=\"add-new-entry\"\n                            variant=\"contained\"\n                            type={\"submit\"}\n                            color=\"primary\"\n                            className={classes.button}\n                        >\n                            {submitButtonText}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default withStyles(styles)(EntryForm);\n"]},"metadata":{},"sourceType":"module"}