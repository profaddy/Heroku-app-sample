{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Desktop/Projects/pocs/credit-debit-software/client/src/containers/EntriesManager/CompactEntries.js\";\nimport React, { Component } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PersonAddOutlinedIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport ModalWrapper from \"../../components/ModalWrapper/ModalWrapper\";\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\nimport PermIdentityOutlinedIcon from \"@material-ui/icons/PermIdentityOutlined\";\nimport DialogWrapper from \"../../components/DialogWrapper/DialogWrapper\";\nimport AdminAuthentication from \"../../components/AdminAuthentication/AdminAuthentication\";\nimport FilterForm from \"../../components/FilterForm/FilterForm\";\nimport AddUserForm from \"../../components/AddUserForm/AddUserForm\";\nimport AddInventoryForm from \"../../components/AddInventoryForm/AddInventoryForm\";\nimport DeleteDialogWrapper from \"../../components/DeleteDialogWrapper/DeleteDialogWrapper\";\nimport styles from \"./styles\";\n\nclass EntriesManager extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      name: \"Inventory\"\n    }, {\n      name: \"Taken\"\n    }, {\n      name: \"Consumed\"\n    }, {\n      name: \"Returned\"\n    }, {\n      name: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(LocalMallOutlinedIcon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), \" \", \"Bag\")\n    }];\n    this.options = {\n      filterType: \"multiselect\",\n      responsive: \"scroll\",\n      rowsPerPage: 100,\n      selectableRowsHeader: false,\n      selectableRows: false,\n      rowsPerPageOptions: [10, 30, 50, 100],\n      fixedHeader: true\n    };\n\n    this.openAddEntryModal = () => {\n      this.props._openAddEntryModal();\n    };\n\n    this.openAddUserModal = () => {\n      this.props._openAddUserModal();\n    };\n\n    this.openAddInventoryModal = () => {\n      this.props._openAddInventoryModal();\n    };\n\n    this.closeAddEntryModal = () => {\n      this.props._closeAddEntryModal();\n\n      this.setState({\n        entryMode: \"add\"\n      });\n    };\n\n    this.closeAddUserModal = () => {\n      this.props._closeAddUserModal();\n    };\n\n    this.closeAddInventoryrModal = () => {\n      this.props._closeAddInventoryModal();\n    };\n\n    this.onDeleteEntry = () => {\n      const {\n        selectedEntry\n      } = this.props;\n\n      this.props._deleteEntry({ ...selectedEntry,\n        entry_mode: \"edit\"\n      });\n    };\n\n    this.hideDeleteDialog = () => {\n      this.setState({\n        entryMode: \"add\",\n        showDeleteDialog: false\n      });\n    };\n\n    this.openEditConfirmDialog = () => {\n      this.setState({\n        isEditConfirmDialogOpen: true\n      });\n    };\n\n    this.closeEditConfirmDialog = () => {\n      this.setState({\n        isEditConfirmDialogOpen: false,\n        isAuthenticated: false\n      });\n    };\n\n    this.onEditConfirmDialogSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.toggleEditOptions = value => {\n      let columns = this.columns;\n\n      if (value === \"showEdit\") {\n        this.setState({\n          showEditOptions: true,\n          columns: columns\n        });\n      } else if (value === \"hideEdit\") {\n        const filteredColumns = columns.filter((column, index) => index < 7);\n        localStorage.setItem(\"authenticated\", false);\n        this.setState({\n          columns: filteredColumns,\n          showEditOptions: false\n        });\n      }\n    };\n\n    this.checkAdminPassword = values => {\n      if (values.adminPassword === this.props.adminPassword) {\n        localStorage.setItem(\"authenticated\", true);\n\n        this.props._doAuthenticateEdit(true);\n\n        this.toggleEditOptions(\"showEdit\");\n        this.closeEditConfirmDialog();\n      } else {\n        this.props.createNotification(\"Incorrect credentials\", \"error\");\n      }\n    };\n\n    this.state = {\n      addEntryModalShowing: false,\n      savedEntries: [],\n      entryMode: \"add\",\n      showDeleteDialog: false,\n      showEditOptions: false,\n      columns: this.columns.filter((column, index) => index < 7),\n      isEditConfirmDialogOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.props._fetchEntries();\n\n    this.props._fetchUsers();\n\n    this.props._fetchInventories();\n\n    const authenticated = localStorage.getItem(\"authenticated\", true);\n\n    if (authenticated === \"true\") {\n      this.setState({\n        columns: this.columns,\n        showEditOptions: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      entries,\n      addEntryModalShowing,\n      addUserModalShowing,\n      addInventoryModalShowing,\n      classes,\n      isAuthenticated\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.AddEntryButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.button,\n      onClick: this.openAddEntryModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddCircleOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Add Entry\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.button,\n      onClick: this.openAddUserModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PersonAddOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"Add User\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.button,\n      onClick: this.openAddInventoryModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Add Inventry\"), !this.state.showEditOptions && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.openEditConfirmDialog(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, \"Show Edit\"), this.state.showEditOptions && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.button,\n      color: \"secondary\",\n      onClick: () => this.toggleEditOptions(\"hideEdit\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, \"Hide Edit\")), /*#__PURE__*/React.createElement(FilterForm, {\n      users: this.props.users,\n      filterEntry: this.props._filterEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Switch On Services Employee List\",\n      data: entries,\n      columns: this.state.columns || this.columns,\n      options: this.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DialogWrapper, {\n      title: \"Authenticate\",\n      content: /*#__PURE__*/React.createElement(AdminAuthentication, {\n        verifyPassword: this.checkAdminPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 30\n        }\n      }),\n      isOpen: this.state.isEditConfirmDialogOpen,\n      onSubmit: this.onEditConfirmDialogSubmit,\n      onClose: this.closeEditConfirmDialog,\n      formName: \"admin-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ModalWrapper, {\n      title: \"Add Entry\",\n      isOpen: addEntryModalShowing,\n      minWidth: 720,\n      showBottomToolbar: false,\n      showCloseIcon: true,\n      onClose: this.closeAddEntryModal,\n      showResizeOptions: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ModalWrapper, {\n      title: \"Add User\",\n      isOpen: addUserModalShowing,\n      minWidth: 260,\n      showBottomToolbar: false,\n      showCloseIcon: true,\n      onClose: this.closeAddUserModal,\n      showResizeOptions: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddUserForm, {\n      onCancel: this.closeAddUserModal,\n      addUser: this.props._addUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ModalWrapper, {\n      title: \"Add Inventory\",\n      isOpen: addInventoryModalShowing,\n      minWidth: 260,\n      showBottomToolbar: false,\n      showCloseIcon: true,\n      onClose: this.closeAddInventoryrModal,\n      showResizeOptions: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddInventoryForm, {\n      onCancel: this.closeAddInventoryrModal,\n      addInventory: this.props._addInventory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DeleteDialogWrapper, {\n      itemTobeDeleted: \"entry\" // itemName={selectedRowIp}\n      ,\n      onClose: this.hideDeleteDialog,\n      onSubmit: this.onDeleteEntry,\n      isOpen: this.state.showDeleteDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(EntriesManager);","map":{"version":3,"sources":["/home/adnan/Desktop/Projects/pocs/credit-debit-software/client/src/containers/EntriesManager/CompactEntries.js"],"names":["React","Component","MUIDataTable","Button","EditIcon","DeleteIcon","LocalMallOutlinedIcon","withStyles","PersonAddOutlinedIcon","AddCircleOutlineOutlinedIcon","ModalWrapper","EventOutlinedIcon","PermIdentityOutlinedIcon","DialogWrapper","AdminAuthentication","FilterForm","AddUserForm","AddInventoryForm","DeleteDialogWrapper","styles","EntriesManager","constructor","props","columns","name","display","options","filterType","responsive","rowsPerPage","selectableRowsHeader","selectableRows","rowsPerPageOptions","fixedHeader","openAddEntryModal","_openAddEntryModal","openAddUserModal","_openAddUserModal","openAddInventoryModal","_openAddInventoryModal","closeAddEntryModal","_closeAddEntryModal","setState","entryMode","closeAddUserModal","_closeAddUserModal","closeAddInventoryrModal","_closeAddInventoryModal","onDeleteEntry","selectedEntry","_deleteEntry","entry_mode","hideDeleteDialog","showDeleteDialog","openEditConfirmDialog","isEditConfirmDialogOpen","closeEditConfirmDialog","isAuthenticated","onEditConfirmDialogSubmit","e","preventDefault","toggleEditOptions","value","showEditOptions","filteredColumns","filter","column","index","localStorage","setItem","checkAdminPassword","values","adminPassword","_doAuthenticateEdit","createNotification","state","addEntryModalShowing","savedEntries","componentDidMount","_fetchEntries","_fetchUsers","_fetchInventories","authenticated","getItem","render","entries","addUserModalShowing","addInventoryModalShowing","classes","AddEntryButton","button","marginRight","users","_filterEntry","_addUser","_addInventory"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PersonAddOutlinedIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";import ModalWrapper from \"../../components/ModalWrapper/ModalWrapper\";\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\nimport PermIdentityOutlinedIcon from \"@material-ui/icons/PermIdentityOutlined\";\nimport DialogWrapper from \"../../components/DialogWrapper/DialogWrapper\";\nimport AdminAuthentication from \"../../components/AdminAuthentication/AdminAuthentication\";\nimport FilterForm from \"../../components/FilterForm/FilterForm\";\nimport AddUserForm from \"../../components/AddUserForm/AddUserForm\";\nimport AddInventoryForm from \"../../components/AddInventoryForm/AddInventoryForm\";\nimport DeleteDialogWrapper from \"../../components/DeleteDialogWrapper/DeleteDialogWrapper\";\nimport styles from \"./styles\";\n\nclass EntriesManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEntryModalShowing: false,\n            savedEntries: [],\n            entryMode: \"add\",\n            showDeleteDialog:false,\n            showEditOptions:false,\n            columns:this.columns.filter((column,index) => index < 7 ),\n            isEditConfirmDialogOpen:false\n        };\n    }\n\n    columns = [\n         {\n            name: \"Inventory\"\n        }, {\n            name: \"Taken\"\n        }, {\n            name: \"Consumed\"\n        }, {\n            name: \"Returned\"\n        }, {\n            name: <div style={{display:\"flex\"}}>\n                <LocalMallOutlinedIcon color=\"primary\"/>\n                {\" \"}\nBag\n            </div>\n        }\n    ]\n\n   options = {\n       filterType: \"multiselect\",\n       responsive: \"scroll\",\n       rowsPerPage: 100,\n       selectableRowsHeader: false,\n       selectableRows: false,\n       rowsPerPageOptions: [\n           10, 30, 50, 100\n       ],\n       fixedHeader: true\n   };\n    \n\n   componentDidMount() {\n       this.props._fetchEntries();\n       this.props._fetchUsers();\n       this.props._fetchInventories();\n       const authenticated = localStorage.getItem(\"authenticated\",true);\n       if(authenticated === \"true\"){\n           this.setState({columns:this.columns,showEditOptions:true});\n       }\n   }\n    openAddEntryModal = () => {\n        this.props._openAddEntryModal();\n    }\n    openAddUserModal = () => {\n        this.props._openAddUserModal();\n    }\n    openAddInventoryModal = () => {\n        this.props._openAddInventoryModal();\n    }\n    closeAddEntryModal = () => {\n        this.props._closeAddEntryModal();\n        this.setState({ entryMode: \"add\" });\n    }\n    closeAddUserModal = () => {\n        this.props._closeAddUserModal();\n    }\n    closeAddInventoryrModal = () => {\n        this.props._closeAddInventoryModal();\n    }\n    onDeleteEntry = () => {\n        const { selectedEntry } = this.props;\n        this.props._deleteEntry({...selectedEntry,entry_mode:\"edit\"});\n    } \n    hideDeleteDialog = () => {\n        this.setState({ entryMode: \"add\",showDeleteDialog:false });\n    }\n\n    openEditConfirmDialog = () => {\n        this.setState({isEditConfirmDialogOpen:true});\n    }\n    closeEditConfirmDialog = () => {\n        this.setState({isEditConfirmDialogOpen:false,isAuthenticated:false});\n    }\n    onEditConfirmDialogSubmit = (e)  =>{\n        e.preventDefault();\n    }\n\n    toggleEditOptions = (value) => {\n        let columns = this.columns;\n        if(value === \"showEdit\"){\n            this.setState({showEditOptions:true,columns:columns});\n        }else if(value === \"hideEdit\"){\n            const filteredColumns = columns.filter((column,index) => index < 7 )\n            localStorage.setItem(\"authenticated\",false);\n            this.setState({columns:filteredColumns,showEditOptions:false});\n        }\n    }\n    checkAdminPassword = (values) => {\n        if(values.adminPassword === this.props.adminPassword){\n            localStorage.setItem(\"authenticated\",true);\n            this.props._doAuthenticateEdit(true);\n            this.toggleEditOptions(\"showEdit\");\n            this.closeEditConfirmDialog();\n        }else{\n            this.props.createNotification(\"Incorrect credentials\",\"error\");\n        }\n    }\n    \n    render() {\n        const { entries, addEntryModalShowing,addUserModalShowing,addInventoryModalShowing,classes,isAuthenticated } = this.props;\n        return (\n            <div>\n                <div className={classes.AddEntryButton}>\n                    <Button color=\"primary\" variant=\"contained\" className={classes.button} onClick={this.openAddEntryModal}>\n                        <AddCircleOutlineOutlinedIcon />\n                        <span style={{marginRight:5}}></span>\n                        <span>\nAdd Entry\n                        </span>\n                    </Button>\n                    <Button color=\"primary\" variant=\"contained\" className={classes.button} onClick={this.openAddUserModal}>\n                        <PersonAddOutlinedIcon /> \n                        {\" \"}\n                        <span style={{marginRight:5}}></span>\n                        <span>\nAdd User\n                        </span>\n                    </Button>\n                    <Button color=\"primary\" variant=\"contained\" className={classes.button} onClick={this.openAddInventoryModal}>\n                        Add Inventry\n                    </Button>\n                    {!this.state.showEditOptions &&\n                        <Button color=\"primary\" onClick={() => this.openEditConfirmDialog()}>\n                            Show Edit \n                        </Button>\n                    }\n                    {this.state.showEditOptions &&\n                        <Button variant=\"outlined\" className={classes.button} color=\"secondary\" onClick={() => this.toggleEditOptions(\"hideEdit\")}>\n                            Hide Edit\n                        </Button>\n                    }\n                </div>\n                <FilterForm\n                        users={this.props.users}\n                        filterEntry={this.props._filterEntry}\n                    />\n                <div>\n                    <MUIDataTable\n                        title={\"Switch On Services Employee List\"}\n                        data={entries}\n                        columns={this.state.columns || this.columns}\n                        options={this.options}\n                    />\n                </div>\n                <DialogWrapper\n                    title={\"Authenticate\"}\n                    content={<AdminAuthentication verifyPassword={this.checkAdminPassword}/>}\n                    isOpen={this.state.isEditConfirmDialogOpen}\n                    onSubmit={this.onEditConfirmDialogSubmit}\n                    onClose={this.closeEditConfirmDialog}\n                    formName={\"admin-password\"}\n                >\n\n                </DialogWrapper>\n                <ModalWrapper\n                    title={\"Add Entry\"}\n                    isOpen={addEntryModalShowing}\n                    minWidth={720}\n                    showBottomToolbar={false}\n                    showCloseIcon={true}\n                    onClose={this.closeAddEntryModal}\n                    showResizeOptions={false}\n                >\n                    {/* <EntryForm\n                        onCancel={this.closeAddEntryModal}\n                        addEntry={this.props._addEntry}\n                        users={this.props.users}\n                        inventories={this.props.inventories}\n                        selectedEntry={this.props.selectedEntry}\n                        entryMode={this.state.entryMode}\n                        updateEntry={this.props._updateEntry}\n                    /> */}\n                </ModalWrapper>\n                <ModalWrapper\n                    title={\"Add User\"}\n                    isOpen={addUserModalShowing}\n                    minWidth={260}\n                    showBottomToolbar={false}\n                    showCloseIcon={true}\n                    onClose={this.closeAddUserModal}\n                    showResizeOptions={false}\n                >\n                    <AddUserForm\n                        onCancel={this.closeAddUserModal}\n                        addUser={this.props._addUser}\n                    />\n                </ModalWrapper>\n                <ModalWrapper\n                    title={\"Add Inventory\"}\n                    isOpen={addInventoryModalShowing}\n                    minWidth={260}\n                    showBottomToolbar={false}\n                    showCloseIcon={true}\n                    onClose={this.closeAddInventoryrModal}\n                    showResizeOptions={false}\n                >\n                    <AddInventoryForm\n                        onCancel={this.closeAddInventoryrModal}\n                        addInventory={this.props._addInventory}\n                    />\n                </ModalWrapper>\n                <DeleteDialogWrapper\n                    itemTobeDeleted={\"entry\"}\n                    // itemName={selectedRowIp}\n                    onClose={this.hideDeleteDialog}\n                    onSubmit={this.onDeleteEntry}\n                    isOpen={this.state.showDeleteDialog}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(EntriesManager);\n"]},"metadata":{},"sourceType":"module"}